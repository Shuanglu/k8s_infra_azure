apiVersion: kubeadm.k8s.io/v1beta2
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789a
  ttl: "0"
  usages:
  - signing
  - authentication
kind: InitConfiguration
nodeRegistration:
  criSocket: /var/run/containerd/containerd.sock
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  kubeletExtraArgs:
    cloud-provider: azure
    cloud-config: /etc/kubernetes/azure.json
---
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    authorization-mode: "Node,RBAC"
    cloud-provider: azure
    cloud-config: /etc/kubernetes/azure.json
    enable-bootstrap-token-auth: "true"
    service-account-key-file: /etc/kubernetes/pki/sa.pub
    audit-log-path: /var/log/audit.log
    audit-log-maxage: "0"
    audit-log-maxbackup: "0"
    audit-log-maxsize: "200"
    audit-policy-file: /etc/kubernetes/audit/audit-policy.yaml
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
  extraVolumes: 
    - name: cloudconfig
      hostPath: /etc/kubernetes/azure.json
      mountPath: /etc/kubernetes/azure.json
      readOnly: true
    - name: audit-policy-file
      hostPath: /etc/kubernetes/audit/audit-policy.yaml
      mountPath: /etc/kubernetes/audit/audit-policy.yaml
      readOnly: true
    - name: audit-log
      hostPath: /var/log/audit.log
      mountPath: /var/log/audit.log
      pathType: FileOrCreate
    - name: k8s-certs 
      hostPath: /etc/kubernetes/pki
      mountPath: /etc/kubernetes/pki
      readOnly: true
apiVersion: kubeadm.k8s.io/v1beta2
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: 
  extraArgs:
    cloud-provider: azure
    cloud-config: /etc/kubernetes/azure.json
    v: "5"
    service-account-private-key-file: /etc/kubernetes/pki/sa.key
  extraVolumes: 
    - name: cloudconfig
      hostPath: /etc/kubernetes/azure.json
      mountPath: /etc/kubernetes/azure.json
      readOnly: true
    - name: k8s-certs 
      hostPath: /etc/kubernetes/pki
      mountPath: /etc/kubernetes/pki
      readOnly: true
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
kind: ClusterConfiguration
kubernetesVersion: v1.19.1
controlPlaneEndpoint: 52.183.85.102:443
networking:
  dnsDomain: cluster.local
  serviceSubnet: 10.96.0.0/12
  podSubnet: 192.168.0.0/16
scheduler: {}
